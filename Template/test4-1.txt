实验原理要点：
- 本实验的目的是掌握线性卷积和循环卷积的计算机编程方法，利用卷积的方法观察和分析系统响应的时域特性。
- 线性卷积是线性时不变系统的输入输出关系，可以通过数值计算实现。线性卷积的结果长度为两个序列长度之和减一。
- 循环卷积是两个有限长序列的 N 点 DFT 的乘积的 IDFT，可以通过矩阵运算或快速傅里叶变换实现。循环卷积的结果长度等于 N。
- 循环卷积和线性卷积的关系取决于 N 的大小。当 N 大于等于两个序列长度之和减一时，循环卷积等于线性卷积。当 N 小于两个序列长度之和减一时，循环卷积等于线性卷积的周期延拓序列的主值序列。
- 当输入序列为无限长或不定长时，需要对输入序列进行分段处理，采用重叠相加法或重叠保留法实现线性卷积运算。

实验总结：
- 本实验中用到了 MATLAB 的 conv(), fft(), ifft(), fftfilt(), stem(), figure() 等函数，以及自定义的 circonv() 函数。
- conv() 函数用于计算两个序列的线性卷积。
- fft() 函数用于计算一个序列的快速傅里叶变换。
- ifft() 函数用于计算一个序列的快速傅里叶逆变换。
- fftfilt() 函数用于利用重叠相加法对一个序列进行滤波处理。
- stem() 函数用于绘制离散信号的幅度图。
- figure() 函数用于创建新的图形窗口。
- circonv() 函数用于计算两个序列的循环卷积，采用 toeplitz() 函数构建循环矩阵。
- 本实验通过编程和绘图验证了线性卷积和循环卷积的定义、计算方法和关系，加深了对数字信号处理系统数值计算本质的理解，掌握了利用 MATLAB 实现卷积运算和滤波处理的技能。